<%=
  params = {
    'cloud' => {
      'plugin' => 'softlayer',
      'properties' => {
        'softlayer' => {
          'username' => p('softlayer.username')
        },
        'registry' => {
          'user' => p('registry.username'),
          'password' => p('registry.password'),
          'http' => {
            'port' => p('registry.port'),
            'user' => p('registry.username'),
            'password' => p('registry.password')
          }
        },
        'agent' => {
          'ntp' => p('ntp')
        }
      }
    }
  }

  if_p('softlayer.api_key') do |api_key|
    params['cloud']['properties']['softlayer']['api_key'] = api_key
  end

  if_p('softlayer.apiKey') do |api_key|
    params['cloud']['properties']['softlayer']['api_key'] = api_key
  end

  if_p('softlayer.api_endpoint') do |endpoint|
    params['cloud']['properties']['softlayer']['api_endpoint'] = endpoint
  end

  if_p('softlayer.disable_os_reload') do |osreload|
    params['cloud']['properties']['softlayer']['disable_os_reload'] = osreload
  end

  if_p('softlayer.ssh_public_key') do |ssh_public_key|
    params['cloud']['properties']['softlayer']['ssh_public_key'] = ssh_public_key
  end

  if_p('softlayer.ssh_public_key_fingerprint') do |ssh_public_key_fingerprint|
    params['cloud']['properties']['softlayer']['ssh_public_key_fingerprint'] = ssh_public_key_fingerprint
  end

  if_p('softlayer.trace') do |trace|
    params['cloud']['properties']['softlayer']['trace'] = trace
  end

  if_p('softlayer.enable_vps') do |enable_vps|
      params['cloud']['properties']['softlayer']['enable_vps'] = enable_vps
  end

  if_p('softlayer.vps_host') do |vps_host|
      params['cloud']['properties']['softlayer']['vps_host'] = vps_host
  end

  if_p('softlayer.vps_port') do |vps_port|
      params['cloud']['properties']['softlayer']['vps_port'] = vps_port
  end

  if_p('softlayer.vps_use_ssl') do |vps_use_ssl|
      params['cloud']['properties']['softlayer']['vps_use_ssl'] = vps_use_ssl
  end

  if_p('softlayer.swift_username') do |swift_username|
      params['cloud']['properties']['softlayer']['swift_username'] = swift_username
  end

  if_p('softlayer.swift_endpoint') do |swift_endpoint|
      params['cloud']['properties']['softlayer']['swift_endpoint'] = swift_endpoint
  end

  if_p('registry.address') do |address|
    params['cloud']['properties']['registry']['address'] = address
  end
  if_p('registry.host') do |host|
    params['cloud']['properties']['registry']['address'] = host
  end

  if_p('registry.endpoint') do |endpoint|
    params['cloud']['properties']['registry']['endpoint'] = endpoint
  end.else do
    params['cloud']['properties']['registry']['endpoint'] = "http://#{p('registry.username')}:#{ERB::Util.url_encode(p('registry.password'))}@#{params['cloud']['properties']['registry']['address']}:#{p('registry.port')}"
  end
  
  if_p('blobstore') do
    blobstore_params = {
      'provider' => p('blobstore.provider')
    }
    if p('blobstore.provider') == 's3'
      options_params = {
        'bucket_name' => p('blobstore.bucket_name'),
        'access_key_id' => p(['agent.blobstore.access_key_id', 'blobstore.access_key_id']),
        'secret_access_key' => p(['agent.blobstore.secret_access_key', 'blobstore.secret_access_key'])
      }
      def update_blobstore_options(options, manifest_key, rendered_key=manifest_key)
        value = p(["agent.blobstore.#{manifest_key}", "blobstore.#{manifest_key}"], nil)
        options[rendered_key] = value unless value.nil?
      end
      update_blobstore_options(options_params, 'use_ssl')
      update_blobstore_options(options_params, 's3_port', 'port')
      update_blobstore_options(options_params, 'host')
      update_blobstore_options(options_params, 's3_force_path_style')
    elsif p('blobstore.provider') == 'local'
      options_params = {
        'blobstore_path' => p('blobstore.path')
      }
    else
      options_params = {
        'endpoint' => "http://#{p(['agent.blobstore.address', 'blobstore.address'])}:#{p('blobstore.port')}",
        'user' => p('blobstore.agent.user'),
        'password' => p('blobstore.agent.password')
      }
    end
    blobstore_params['options'] = options_params
    params['cloud']['properties']['agent']['blobstore'] = blobstore_params
  end

  if_p('agent.vcappassword') do |vcappassword|
    params['cloud']['properties']['agent']['vcappassword'] = vcappassword
  end

  if_p('agent.mbus') do |mbus|
    params['cloud']['properties']['agent']['mbus'] = mbus
  end.else_if_p('nats') do
    params['cloud']['properties']['agent']['mbus'] = "nats://#{p('nats.user')}:#{p('nats.password')}@#{p(['agent.nats.address', 'nats.address'])}:#{p('nats.port')}"
  end
  JSON.dump(params)
%>
